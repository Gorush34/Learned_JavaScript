<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>

<style type="text/css">
   
   table, th, td {border: solid 1px gray;}
   
   table {border-collapse: collapse; 
          width: 50%;}
   
   td {text-align: center;}
   
   input {
      margin-left: 20px;
   }
</style>

</head>
<body>

<div>
	<h2>계산서</h2>
   <table id="tbl">
      <thead>
         <tr>
            <th width="25%">제품명</th>
            <th width="50%">단가 및 수량</th>
            <th width="25%">금액</th>
         </tr>
      </thead>
      <tbody>
         <tr>
            <td>사과</td>   
            <td>1,000<input type="number" min="0" max="10" value="0" id="apple" /></td>
            <td id="apple">0</td>
         </tr>
         <tr>
            <td>딸기</td>   
            <td>2,000<input type="number" min="0" max="10" value="0" id="strawberry" /></td>
            <td id="strawberry">0</td> 
         </tr>
         <tr>
            <td>참외</td>   
            <td>3,000<input type="number" min="0" max="10" value="0" id="melon" /></td>
            <td id="melon">0</td>
         </tr>
      </tbody>
      <tfoot>
         <tr>
            <td colspan="2">총액</td>
            <td>0</td>
         </tr>
      </tfoot>
   </table>
</div>

<div id="display_error">
    <span style="color: red;">수량은 0개 이상 10개 이하여야 합니다.</span>
</div>

<script type="text/javascript">

    const display_error = document.querySelector("div#display_error");
    display_error.style.display = "none";

    function func_calculate(target) {
        let price = target.parentNode.innerText;    

        price = price.split(",").join(""); 

        let su = target.value;

        if(su < 0 || su > 10){
        //  alert("수량은 0개 이상 10개 이하여야 합니다.");
            display_error.style.display = "block";
            su = 0;
            target.value = 0;
        }
        else{
            display_error.style.display = "none";    
        }

        price *= su;

        const id = target.id;
        const elemt = document.querySelector(`td#${id}`);

        elemt.innerHTML = price.toLocaleString('en');

        const elemt_list = document.querySelectorAll("table#tbl > tbody > tr > td:last-child"); // 값을 받아옴
        const elemt_arr = Array.from(elemt_list, item => item.innerText.split(",").join("") ); // 값을 배열로 변환
        console.log(elemt_arr); 

        let sum = 0;
        for(let item of elemt_arr) {
            sum += Number(item);
        }

        document.querySelector("table#tbl > tfoot > tr > td:last-child").innerHTML = sum.toLocaleString('en');

    } // end of function func_calculate()----------





    const tbl = document.querySelector("table#tbl");

    tbl.addEventListener('change', function(e) { 
     
                                //alert(e.target.id); // e.target 은 실제로 change 가 발생한 태그(node, element)를 가리키는 것이다.
                                                  // tag(node,element) 는 JavaScript에서 객체로 본다! ex) td tr 등등.. ********
                                                  // apple strawberry melon
                                //alert(e.target.value); // 0  1  2
    /*
                                노드.parentNode.parentNode - 부모노드 의 부모노드
                                노드.parentNode      - 부모노드
                                노드.childNodes      - 모든자식노드들
                                노드.firstChild      - 첫째자식노드
                                노드.lastChild       - 막내자식노드
                                노드.nextSibling     - 나의바로밑동생노드(형제노드)
                                노드.previousSibling - 나의바로위형노드(형제노드)
                                
                                !! 조심할 사항은 태그사이에 띄어쓰기를 하거나 태그를 줄 바꿈을 해버리면
                                   띄어쓰기나 줄바꿈을 텍스트 노드(text node)로 취급해버리므로 
                                   원하는 노드의 값을 가지고 오지 않고 undefined 가 나온다.  
                                   
                                이렇게 undefined 가 나오지 않도록 하기 위해서 우리는 노드에 id 값을 주어서 처리하도록 한다.     
                             */
                             let price = e.target.parentNode.innerText;     // "1,000"     "2,000"     "3,000"

                             /*
                             // console.log("1,000"*2);     // NaN(Not a Number) 은 숫자가 아니다 라는 말이다.
                                let money = "12,345,6789";
                             // [콤마를 제거하는 첫번째 방법]
                                money = money.replace(/,/g, ""); // 정규표현식, /g = global
                                console.log(money); // 123456789

                             // [콤마를 제거하는 두번째 방법]
                                money ="12,345,6789";
                                console.log(money.split(",")); // (3) ['12', '345', '6789']
                                console.log(money.split(",").join(""));  // 123456789
                            */

                            price = price.split(",").join(""); // 콤마를 제거한 것 "1000"     "2000"     "3000"
                            // alert(price);

                            let su = e.target.value;
                            price *= su;

                            // alert(e.target.parentNode.nextSibling.innerHTML); // undefined;

                            const id = e.target.id;
                            const elemt = document.querySelector(`td#${id}`);
                            // alert(elemt.innerHTML); // 

                            // 3자리 마다 콤마찍어주는 것은 숫자.toLocaleString('en'); 이다.
                            elemt.innerHTML = price.toLocaleString('en');

                            const elemt_list = document.querySelectorAll("table#tbl > tbody > tr > td:last-child"); // 값을 받아옴
                            // console.log(elemt_list); // NodeList(3) [td#apple, td#strawberry, td#melon]
                            const elemt_arr = Array.from(elemt_list, item => item.innerText.split(",").join("") ); // 값을 배열로 변환
                            console.log(elemt_arr); 
                            /*
                                (3) ['1000', '0', '0']
                                (3) ['1000', '2000', '0']
                                (3) ['1000', '2000', '3000']

                            */

                            let sum = 0;
                            for(let item of elemt_arr) {
                                sum += Number(item);
                            }

                            //console.log(sum);
                            document.querySelector("table#tbl > tfoot > tr > td:last-child").innerHTML = sum.toLocaleString('en');
                            
    });

    tbl.addEventListener('keyup', function(e) { func_calculate(e.target); });
//    tbl.addEventListener('change', function(e) { func_calculate(e.target); });
    

</script>


</body>
</html>


/////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>

<style type="text/css">

	table {
		float: left;
		border: solid 1px gray;
		width: 300px;
		min-height: 250px;
		margin: 20px;
	}

	table td.title {
		color: blue;
		font-weight: bold;
	}

	table td.center {
		text-align: center;
	}

	table td.special {
		color: red;
		font-weight: bold;
	}


</style>

<script type="text/javascript">

	window.onload = function(){
		
		const arrPerson = [{name:"아이유", photo:"iyou.jpg",   age:28, address:"서울시 강동구", special:"가수 겸 탤런트<br/>팬들이 많음"}         
                          ,{name:"김태희", photo:"kimth.jpg",  age:27, address:"서울시 강서구", special:"탤런트<br/>팬들이 많음"}
                          ,{name:"박보영", photo:"parkby.jpg", age:26, address:"서울시 강남구", special:"탤런트 및 영화배우<br/>팬들이 많음"}];
	
		const btn_show = document.querySelector("button#show");
		const btn_hide1 = document.querySelector("button#hide1");
		const btn_hide2 = document.querySelector("button#hide2");

		const div_display = document.querySelector("div#display");
	
		let html = ``;

		// arrPerson.forEach( function(item, index, array) { } );

		arrPerson.forEach( item => {
										html += `<table>
													<tr>
														<td rowspan='3'><img src='images/${item.photo}' /></td>
														<td class='title'>성명</td>
														<td>${item.name}</td>
													</tr>
													<tr>
														<td class='title'>나이</td>
														<td>${item.age}</td>
													</tr>
													<tr>
														<td class='title'>주소</td>
														<td>${item.address}</td>
													</tr>
													<tr>
														<td colspan='3' class='center special'>특이사항</td>
													</tr>
													<tr>
														<td colspan='3' class='center'>${item.special}</td>
													</tr>
												</table>
												`;
									});

		btn_show.addEventListener('click', () => { 
		//	div_display.style.display = "block";
		//  또는
			div_display.style.display = ""; // div_display.style.display 에 설정된 display 의 값인 block으로 하겠다는 말이다.	

			div_display.innerHTML = `${html}`;
		});

		btn_hide1.addEventListener('click', () => { 
			div_display.innerHTML = ``;
		});

		btn_hide2.addEventListener('click', () => { 
			div_display.style.display = "none";
		});
	
	}

</script>

</head>
<body>

	<div>
		<button type="button" id="show">보이기</button>
		<button type="button" id="hide1">감추기1</button>
		<button type="button" id="hide2">감추기2</button>

	</div>
	<div id="display"></div>

</body>
</html>

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////



<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>class를 사용하여 객체를 만들고 select 태그를 이용해 선택한 인물의 이미지 및 정보가 화면에 나타나도록 한다</title>
<style type="text/css">

    div#container {
        width: 80%;
        margin: 0 auto;
    }

    div#person {
        /* border: solid 1px red; */
        min-height: 50px;
        overflow: hidden;
        margin-top: 20px;
    }

    img {
        display: block;
        width: 12%;
        float: left;
    }

    div#information {
        /* border: solid 1px blue; */
        width: 40%;
        float: left;
    }

    ul {
        /* border: solid 1px gray; */
        list-style-type: none;
        padding: 0px;
        margin: 0 0 0 2%;
    }

    li {
        line-height: 35px;
    }

    label {
        display: inline-block;
        width: 25%;
        font-weight: bold;
        color: blue;
    }

    select {
        height: 30px;
    }

</style>

<script type="text/javascript">

    window.onload = function() {
        // ES6(ECMAScript 6) 에서 나온 class 를 사용하여 객체를 생성해 보겠습니다.
        // JavaScript Classes 는 ES6(ECMAScript 6) 이다.
        /*
            >> 문법 << 
            class ClassName {
                
                속성명 = 초기값;
                
                constructor() { ... }
                
                set xxx(value) {  // 세터
                    this.속성명 = value;
                }
                
                get xxx() { return this.속성명; }  // 게터
                
                method_1() { ... }
                method_2() { ... }
                method_3() { ... }
            }
        */

        class Member {


            // birthYear = 0; // birthYear 의 접근제한자는 public 이며, 클래스 외부에서도 접근이 가능하다.
            #birthYear = 0;   // birthYear 의 접근제한자는 private 이며, 이것은 클래스 외부에서도 접근이 가능하다.
                              // 접근제한자 private 은 속성(프로퍼티)명 앞에 #을 붙인다.

            // 생성자 함수
            constructor(name, photo, address, special) {
                this.name = name;
                this.photo = photo;
                this.address = address;
                this.special = special;

            }

            set setBirthYear(value) {
                if(value <= 0) throw new Error("생년은 음수가 될 수 없습니다!!"); 
                /* 사용자가 정의하는 오류를 발생시긴다. F12 콘솔창에 오류메시지가 나타난다. */
                this.#birthYear = value;
            }

            get getBirthYear() {
                return this.#birthYear;
            }

            // 메소드
            age() {
                const date = new Date(); // 자바스크립트에서 현재 날짜시간을 알려주는 것이다.
                return date.getFullYear() - this.#birthYear + 1;     // date.getFullYear(); 이 date 에서 년도만 추출해오는 것이다.
            }

        } // end of class Member-------------------------------

        const iyou_mbr = new Member("아이유", "iyou.jpg", "서울시 강동구", "가수 겸 탤런트 팬들이 많음");
 //       iyou_mbr.birthYear = -1995; // birthYear 는 public 이므로 외부에서 직접적으로 접근 가능함. 그러므로 음수도 입력 가능.

 //       iyou_mbr.#birthYear = 1995; // #birthYear 은 private 이므로 외부에서 직접적으로 접근이 불가하다.
        // Uncaught SyntaxError: Private field '#birthYear' must be declared in an enclosing class

//        iyou_mbr.setBirthYear = -1995; // 세터를 호출함.
        // Uncaught Error: 생년은 음수가 될 수 없습니다!!
        // ** 주의사항 : iyou_mbr.setBirthYear(-1995); 와 같이 하면 오류임. 위처럼 호출해라.

        iyou_mbr.setBirthYear = 1995; // 28

        console.log(iyou_mbr.age());

        const kimth_mbr = new Member("김태희", "kimth.jpg", "서울시 강서구", "탤런트 팬들이 많음");
        kimth_mbr.setBirthYear = 1996;

        const parkby_mbr = new Member("박보영", "parkby.jpg", "서울시 강남구", "탤런트 및 영화배우 팬들이 많음");
        parkby_mbr.setBirthYear = 1997;

        const arrMember = []; // 또는 const arrMember = new Array();
        arrMember.push(iyou_mbr);
        arrMember.push(kimth_mbr);
        arrMember.push(parkby_mbr);

        ////////////////////////////////////////////////////////////////////////////////////////////////////

        const person = document.querySelector("div#person");
        person.style.display = "none";

        const select = document.querySelector("select#select");

        let html = `<option>선택하세요</option>`;

        arrMember.forEach( item => { html += `<option>${item.name}</option>` } ); // arrMember 값을 html에 저장

        select.innerHTML = html; // select에 저장

        ////////////////////////////////////////////////////////////////////////////////////////////////////

        const img = document.querySelector("img#img");
        const information = document.querySelector("div#information");

        // !!! select 태그의 이벤트는 click 이 아니라 change 이다. !!!
        select.addEventListener('change', () => {

            const nSelectedIndex = select.selectedIndex; // 선택한 사람을 번호로 바꿔서 받아온다!
            // !!!! select.selectedIndex 은 <option>태그의 index 번호를 말한다. !!!!
            // 즉, 첫번째 <option>태그는 0이고, 두번째 <option>태그는 1, 세번째 <option>태그는 2 ..... 으로 되어진다.

            // alert(nSelectedIndex);
            /*
            <option>선택하세요</option>는 nSelectedIndex가 0
            <option>아이유</option>는 nSelectedIndex가 1
            <option>김태희</option>는 nSelectedIndex가 2
            <option>박보영</option>는 nSelectedIndex가 3 이 된다. 
            */

            // 참고 : 배열명.forEach()는 break; 가 없으므로 배열명.forEach((item,index,array) => {} ) + break; 기능을 가지는 배열명.some( (item,index) => {} )을 사용한다. 
            //       배열명.some( (item,index) => { } )은 조건이 true가 되는 순간 반복을 멈추어 버린다.
            arrMember.some( (item, index) => {
                /*
                    item 이 iyou_mbr 일때 index 는 0 이다.
                    item 이 kimth_mbr 일때 index 는 1 이다.
                    item 이 parkby_mbr 일때 index 는 2 이다.
                */

                if(nSelectedIndex == 0) {
                    // 선택하세요를 선택한 경우!
                    person.style.display = "none";;
                }
                else if(nSelectedIndex - 1 == index ) {
                    // 1 - 1 = 0 아이유            
                    img.src = `images/${item.photo}`;

                    html = `<ul>
                                <li><label>성명</label>${item.name}</il>
                                <li><label>생년</label>${item.getBirthYear}</il> ${''/* 게터를 호출함. 주의사항 item.getBirthYear() 아님! */}
                                <li><label>나이</label>${item.age()}세</il>
                                <li><label>주소</label>${item.address}</il>
                                <li><label>특이사항</label>${item.special}</il>
                            </ul>`;

                    information.innerHTML = html;

                    //person.style.display = "block";
                    person.style.display = "";
                }
        
            }); //end of arrMember.some( (item, index)-----------------


            

        }); // select.addEventListener('change', ()------------------------


    }

</script>

</head>
<body>

    <div id="container">
        <h2>인물소개</h2>
        <select id="select"></select>
        <div id="person">
            <img id="img" />
            <div id="information"></div>
        </div>
    </div>

</body>
</html>




/////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
